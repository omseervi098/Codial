function replyPostComment(e,n){let t={PostId:e,CommentId:n,newReplyForm:$(`#comment-${n}-${e}-reply-form`),replyList:$(`#comment-${n}-${e}-reply-list`),commentContainer:$(`#comment-${n}`),replycnt:$(`#replycnt-${n}`)},a=function(e){$(e).click((function(a){a.preventDefault(),$.ajax({type:"GET",url:$(e).prop("href")}).done((function(e){$(`#reply-${e.data.reply_id}`).remove(),t.replycnt.html(' <span class="d-none d-lg-inline-block">Replies</span>\n                    '+(e.data.replylen-1)),new Notification("Reply deleted","success"),socket.emit("delete_reply",{data:{reply_id:e.data.reply_id,replylen:e.data.replylen,commentId:n}})})).fail((function(e){new Notification("Error in deleting reply","danger"),console.log("error in completing the request",e)}))}))},l=function(e,n,t){return`\n      \x3c!-- Reply item START --\x3e\n      <li class="reply-item mb-2" id="reply-${e._id}">\n        <div class="d-flex ithreply">\n          \x3c!-- Avatar --\x3e\n          <div class="avatar avatar-xs">\n            <a href="#!">\n              <img class="avatar-img rounded-circle" src="${e.user.avatar?e.user.avatar:assetPath("images/default-avatar.png")}" alt="${e.user.name}" />\n            </a>\n          </div>\n          \x3c!-- Reply by --\x3e\n          <div class="ms-2 w-100">\n            <div class="bg-light pe-2 pe-sm-3 p-3 rounded">\n              <div class="d-flex flex-column">\n                <div class="d-flex align-items-center w-100 justify-content-between">\n\n                  <h6 class="mb-1 card-title d-flex flex-wrap gap-1 align-items-center justify-content-between flex-grow-1">\n                    <a href="#!"> ${e.user.name} </a>\n                    <div class="text-muted  small ps-0  time-posted">\n                      ${getTimePosted(e.createdAt)}\n                    </div>\n                  </h6>\n\n                  <div class="dropdown ms-1">\n                    <a href="#" class="text-secondary btn btn-secondary-soft-hover py-1 px-2" id="replyAction" data-bs-toggle="dropdown" aria-expanded="false">\n                      <i class="fa fa-ellipsis-h text-muted"></i>\n                    </a>\n                    \x3c!-- Card feed action dropdown menu --\x3e\n                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="replyAction">\n                      ${t.user&&t.user.id==e.user.id?`<li>\n                        <a class="dropdown-item" href="/post/destroy-reply/${e._id}">\n                          <i class="fa fa-edit fa-fw pe-2"></i>\n                          Edit Reply\n                        </a>\n                      </li>\n                      <li>\n                        <a class="dropdown-item delete-reply-btn" href="/comments/destroy-reply/${e._id}" id="delete-${e._id}-reply">\n                          <i class="fa fa-trash fa-fw pe-2"></i>\n                          Delete Reply\n                        </a>\n                      </li>`:t.user?`\n                      <li>\n                        <a class="dropdown-item" href="#">\n                          <i class="fa fa-user fa-fw pe-2"></i>\n                          Unfollow\n                          <strong class="text-capitalize">\n                            ${e.user.name}\n                          </strong>\n                        </a>\n                      </li>\n                      <li>\n                        <a class="dropdown-item" href="#">\n                          <i class="fa fa-flag fa-fw pe-2"></i>\n                          Report Reply</a>\n                      </li> `:""} \n                    </ul>\n                  </div>\n                </div>\n                <p class="small mb-0">${e.content}</p>\n                \x3c!-- Like Button --\x3e\n              </div>\n            </div>\n            <div class="share">\n              ${t.user?`<a href="/likes/toggle/?id=${e._id}&type=CommentReply" data-likes="${e.likes.length}" class="text-muted small toggle-like-button">\n                ${e.likes.find((e=>e.user._id.toString()==t.user._id.toString()))?`\n                      <span class="liked">\n                        <i class="fa fa-thumbs-up fa-fw pe-2"></i>Liked (${e.likes.length})\n                      </span>`:`<span><i class="fa fa-thumbs-up fa-fw pe-2"></i>Like (${e.likes.length})</span>`} \n              </a>`:`<div class="text-muted small fw-bold">\n                <i class="fa fa-thumbs-up fa-fw pe-2"></i>Likes (${e.likes.length})\n              </div>`}\n            </div>\n          </div>\n        </div>\n      </li>\n      `};t.newReplyForm.submit((function(i){i.preventDefault();let s=this;""!=t.newReplyForm[0][0].value&&t.newReplyForm[0][0].value.trim()?(t.newReplyForm.attr("disabled",!0),$.ajax({type:"POST",url:"/comments/create-reply",data:$(s).serialize()}).done((function(i){let r=l(i.data.reply,i.data.comment,i.data.locals);t.replyList.prepend(r),new ToggleLike($(`#reply-${i.data.reply._id} .toggle-like-button`)),a($(`#delete-${i.data.reply._id}-reply`)),t.replycnt.html(` <span class="d-none d-lg-inline-block">Replies</span>\n                    ${i.data.comment.replies.length}`),new Notification("Reply created","success"),s.reset(),t.newReplyForm.attr("disabled",!1),socket.emit("new_reply",{data:{reply:i.data.reply,comment:i.data.comment,postId:e,commentId:n}})})).fail((function(e){new Notification("Error in creating reply","danger"),console.log("error in completing the request",e)}))):new Notification("Reply cannot be empty","warning")})),$(".delete-reply-btn",self.commentContainer).each((function(){a($(this))}))}