let selfUser,userMail,otherUser,currentChatRoom,chatArea=$("#chatbox"),roomList=[];var socket=io.connect("http://localhost:5000",{transports:["websocket"]});function joinRoom(){socket.emit("join_room",{user_email:userMail,chatroom:currentChatRoom}),socket.on("user_joined",(function(s){console.log("New User Joined")}))}socket.on("connect",(function(){console.log("connection established using sockets...!")}));var sendMessage=()=>{function s(){let s=$(".chat-input"),e=s.val();""!=e&&(socket.emit("send_message",{message:e,user_id:selfUser._id,user_email:userMail,chatroom:currentChatRoom}),s.val(""))}$(".message-send").submit(s),$(".chat-input").keydown((function(e){"Enter"!==e.key||e.shiftKey||s()}))};function connectRoom(){roomList.includes(currentChatRoom)||(joinRoom(),roomList.push(currentChatRoom)),sendMessage()}function createArea(s,e,n){return`<div class="chatbox-holder">\n    <div class="chatbox">\n        <div class="chatbox-top">\n            <div class="chatbox-avatar">\n                <a >\n                ${e.avatar?`<img src="${e.avatar}" />`:'<img src="/images/default-avatar.png" />'}\n                </a>\n            </div>\n            <div class="chat-partner-name">\n                <span class="status online"></span>\n                <a>${e.name}</a>\n            </div>\n            \n            <div class="chatbox-icons">\n                <i onclick="minimize()" class="fa fa-minus"></i>\n                <i onclick="hide()" class="fa fa-close"></i>\n            </div>\n            </div>\n            <div class="chat-messages" id="chat-messages-list-${s._id}">\n            ${s.messages.map((s=>""+(s.user===n._id?`<div class="message-box-holder">\n                       <div class="message-box">\n                           ${s.message}\n                        </div>\n                        </div>`:`\n                    <div class="message-box-holder">\n                        <div class="message-sender">\n                            ${e.name}\n                        </div>\n                        <div class="message-box message-partner">\n                            ${s.message}\n                        </div>\n                    </div>`))).join("")}\n        </div>\n        <div class="chat-input-holder">\n            <input type="text" class="chat-input" placeholder="Type Here..."></input>\n            <input type="submit" value="Send" class="message-send" />\n        </div>\n    \n    </div>`}function minimize(){$(".chatbox").toggleClass("chatbox-min")}function hide(){$("#chatbox").css("display","none"),$(".chatbox").hide()}function arrow(){$(".back-button").click((()=>{$("#chatbox").css("display","none"),$("#chatbox").css({display:"block",width:"100%"})}))}function changeScreen(){window.innerWidth<=430&&($("#chatbox").css({display:"block",width:"100%"}),$("#chatbox").css("display","none"))}function scrollBottom(){let s=document.getElementsByClassName("chat-messages")[0];s.scrollTop=s.scrollHeight}function tempClass(s){$("#roomlist > div").removeClass("temporary-highlight"),$(`#friend-${s}`).addClass("temporary-highlight")}socket.on("receive_message",(function(s){let e=$(`#chat-messages-list-${currentChatRoom}`);s.user_email===userMail?e.append(`\n        <div class="message-box-holder">\n          <div class="message-box">\n             ${s.message}\n          </div>\n        </div>\n        `):e.append(`\n    <div class="message-box-holder">\n        <div class="message-sender">\n            ${otherUser.name}\n        </div>\n        <div class="message-box message-partner">\n            ${s.message}\n        </div>\n    </div>\n    `),scrollBottom()})),$(".message-btn").each((function(){$(this).click((function(){$("#chatbox").css("display","flex");const s=$(this).attr("data-friendId");$.ajax({type:"GET",url:`/messages/chatroom?friend=${s}`,success:function(s){let{chatRoom:e,friend:n,user:a}=s.data,o=createArea(e,n,a);chatArea.empty(),$("#chatbox").append(o),scrollBottom(),selfUser=a,otherUser=n,currentChatRoom=e._id,userMail=a.email,connectRoom()},error:function(s){console.log(s.responseText)}})}))}));